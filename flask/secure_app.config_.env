""" This is a guide to secure app secret key and other credentials using python-dotenv package"""

Doc: Why we need secure credentials?
  
  It is very important to hide/secure personal credentials, databse and app secret key to hide in another file like .env or config so on deployment in real world
  hackers dont get to access from main.py file
  
  // !mportant note: don't upload .env file to git!
  
so to do this first we need to install python-dotenv using pip manager
  cmd: pip install python-dotenv


then lets create a .env file in our project directory.
in this file we are gonna write our credentials. few examples are:
  
    # Secret Key 
    SECRET_KEY = "thisisasecretkey"

    # configuration of mail
    MAIL_SERVER = 'smtp.mailserver.com'
    MAIL_PORT = 745
    MAIL_USERNAME = 'reciver@username.com'
    MAIL_PASSWORD = 'P45sW0rD' //this is just an example. do not use this password!
    
    
once thats done we can go to our main py file and do following:

   import os
   from dotenv import load_dotnv
   
   load_dotenv() # it is important to load_dotenv() otherwise app will crash!
   

example code:

    import os
    from dotenv import load_dotenv
    
    # take environment variables from .env
    load_dotenv() 

    app = Flask(__name__)


    # Secret Key 
    app.config['SECRET_KEY'] = os.getenv('SECRET_KEY')

    # configuration of mail
    app.config['MAIL_SERVER']= os.getenv('MAIL_SERVER')
    app.config['MAIL_PORT'] = os.getenv('MAIL_PORT')
    app.config['MAIL_USERNAME'] = os.getenv('MAIL_USERNAME')
    app.config['MAIL_PASSWORD'] = os.getenv('MAIL_PASSWORD')


    @app.route('/home')
    def home():
    return render_template('index.html')
    
    
    if __name__ == '__main__':
    app.run(host='0.0.0.0')
    
    
    That's all!
    
    more docs: https://pypi.org/project/python-dotenv/
  
